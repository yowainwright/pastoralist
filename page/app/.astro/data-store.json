[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.12.4","content-config-digest","262e19c900bdc416","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://jeffry.in\",\"compressHTML\":true,\"base\":\"/pastoralist\",\"trailingSlash\":\"never\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[],\"responsiveStyles\":false},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false,\"liveContentCollections\":false,\"csp\":false,\"rawEnvValues\":false},\"legacy\":{\"collections\":false}}","docs",["Map",11,12,21,22],"introduction",{"id":11,"data":13,"body":16,"filePath":17,"digest":18,"legacyId":19,"deferredRender":20},{"title":14,"description":15},"Introduction to Pastoralist","Pastoralist is a dependency management tool that keeps your package.json overrides, resolutions, and patches up-to-date automatically","import ReviewFlow from \"../../components/ReviewFlow\";\n\n\u003Cdiv className=\"flex flex-wrap gap-2 mb-8\">\n  \u003Ca href=\"https://badge.fury.io/js/pastoralist\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \u003Cimg src=\"https://badge.fury.io/js/pastoralist.svg\" alt=\"npm version\" />\n  \u003C/a>\n  \u003Ca href=\"https://github.com/yowainwright/pastoralist\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \u003Cimg src=\"https://img.shields.io/github/stars/yowainwright/pastoralist?style=social\" alt=\"GitHub stars\" />\n  \u003C/a>\n  \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \u003Cimg src=\"https://img.shields.io/badge/TypeScript-Ready-blue\" alt=\"TypeScript Ready\" />\n  \u003C/a>\n  \u003Ca href=\"https://opensource.org/licenses/MIT\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \u003Cimg src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" alt=\"License: MIT\" />\n  \u003C/a>\n\u003C/div>\n\n## What is Pastoralist?\n\nPastoralist is a command-line tool that automatically manages and updates your package.json overrides, resolutions, and patches. It ensures that your dependency overrides stay up-to-date with the latest versions, saving you time and reducing potential security vulnerabilities.\n\n## Why is Pastoralist Awesome?\n\n### The Problem\n\nWhen working with Node.js projects, you often need to override specific package versions due to:\n- Security vulnerabilities in transitive dependencies\n- Bug fixes that haven't been merged upstream\n- Breaking changes you need to avoid\n- Custom patches for specific use cases\n\nHowever, managing these overrides manually is tedious and error-prone:\n\n```json\n{\n  \"overrides\": {\n    \"lodash\": \"4.17.19\",\n    \"minimist\": \"1.2.5\",\n    \"node-fetch\": \"2.6.7\"\n  }\n}\n```\n\nOver time, these overrides become outdated, and you might miss important security updates or bug fixes.\n\n### The Solution\n\nPastoralist automates this process by:\n- Scanning your package.json for overrides, resolutions, and patches\n- Checking for newer versions of overridden packages\n- Updating them automatically while maintaining compatibility\n- Removing overrides that are no longer needed\n\nWith one simple command, you can ensure all your overrides are current:\n\n```bash\npastoralist\n```\n\n## How Pastoralist Works\n\n\u003CReviewFlow client:load />\n\nPastoralist manages overrides, resolutions, and patches so you don't have to!\n\nIt is comprised of a few functions which read the root package.json file's overrides or resolutions and map the packages in them to a `pastoralist.appendix` object. Additionally, it automatically detects and tracks patches in your project (such as those created by `patch-package`).\n\nIf Pastoralist observes an override, resolution, or patch is no longer needed, it removes it from the respective objects and the pastoralist appendix object, and notifies you about unused patches.\n\nThis means with Pastoralist, your only concern is adding dependencies to the overrides and resolutions objects - patch tracking happens automatically.\n\n### Workspace Support\n\nIn workspace/monorepo setups, Pastoralist:\n- Reads the root package.json or project manifest file\n- Maps all overrides, resolutions, and patches to the `pastoralist.appendix` object\n- Updates dependencies across all workspaces\n- Maintains consistency throughout your monorepo\n\n## What Are Overrides, Resolutions, and Patches?\n\n### Overrides (npm)\n\nOverrides allow you to replace a package version in your dependency tree with a different version. This is npm's way of handling dependency conflicts:\n\n```json\n{\n  \"overrides\": {\n    \"foo\": \"1.0.0\",\n    \"bar\": {\n      \"baz\": \"1.0.0\"\n    }\n  }\n}\n```\n\n### Resolutions (Yarn)\n\nResolutions serve the same purpose for Yarn users, allowing you to force specific versions:\n\n```json\n{\n  \"resolutions\": {\n    \"foo\": \"1.0.0\",\n    \"**/bar/baz\": \"1.0.0\"\n  }\n}\n```\n\n### Patches\n\nPatches are custom modifications to node_modules packages, typically created with tools like `patch-package`. Pastoralist automatically detects and tracks these patches.\n\n## Object Anatomy\n\nThe Pastoralist object in your package.json provides full transparency into what's being managed:\n\n```json\n{\n  \"overrides\": {\n    \"minimist\": \"1.2.8\"\n  },\n  \"pastoralist\": {\n    \"appendix\": {\n      \"minimist\": {\n        \"key\": \"minimist\",\n        \"version\": \"1.2.8\",\n        \"parentKeys\": [\".\", \"mkdirp\"],\n        \"hasOverride\": true,\n        \"hasResolution\": false,\n        \"hasPatch\": false\n      }\n    }\n  }\n}\n```\n\n### Appendix Properties\n\n- **key**: The package name\n- **version**: Current override version\n- **parentKeys**: Where this dependency appears in your tree\n- **hasOverride**: Whether an npm override exists\n- **hasResolution**: Whether a Yarn resolution exists\n- **hasPatch**: Whether a patch file exists\n\n## Getting Started\n\n1. Install Pastoralist globally:\n   ```bash\n   npm install -g pastoralist\n   ```\n\n2. Run it in your project:\n   ```bash\n   pastoralist\n   ```\n\n3. That's it! Pastoralist will automatically:\n   - Scan for overrides and resolutions\n   - Check for updates\n   - Update your package.json\n   - Track everything in the appendix\n\n## Benefits\n\n- **ğŸš€ Automated Updates**: No more manual version checking\n- **ğŸ”’ Security**: Stay current with security patches\n- **ğŸ“Š Transparency**: Clear tracking of all overrides\n- **ğŸ§¹ Clean**: Removes unnecessary overrides automatically\n- **âš¡ Fast**: Updates all overrides with one command\n- **ğŸ“¦ Compatible**: Works with npm, yarn, pnpm, and bun","src/content/docs/introduction.mdx","8461d8b3c0dfd08c","introduction.mdx",true,"setup",{"id":21,"data":23,"body":26,"filePath":27,"digest":28,"legacyId":29,"deferredRender":20},{"title":24,"description":25},"Setup","Quick and easy setup guide for Pastoralist CLI","\u003Csection>\n\n## Setup\n\nOkay! Hopefully the breakdowns above were clear enough on why you might want to use Pastoralist!\nPlease submit a [pull request](https://github.com/yowainwright/pastoralist/pulls) or [issue](https://github.com/yowainwright/pastoralist/issues) if it wasn't!\n\nNow for the super simple setup!\n\n1. Install\n\n```bash\nnpm install pastoralist --save-dev\n# pastoralist does not expect to be a dependency! It's a tool!!!\n```\n\n2. run\n\n```bash\npastoralist\n# => That's it! Check out your package.json\n# Pastoralist will automatically detect and track:\n# - Overrides and resolutions\n# - Patches (from patch-package and similar tools)\n# - All dependency types (dependencies, devDependencies, peerDependencies)\n```\n\n3. (recommended) add Pastoralist to a postInstall script\n\n```js\n// package.json\n{\n  \"scripts\": {\n    \"postinstall\": \"pastoralist\"\n  }\n}\n```\n\nIn the near future, Pastoralist will fully support a config file but this is it for now!\n\nRead on to understand what is going on under the hood of Pastoralist!\n\n---\n\n\u003C/section>","src/content/docs/setup.mdx","019c6f1614d3e112","setup.mdx"]